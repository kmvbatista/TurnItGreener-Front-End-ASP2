#pragma checksum "C:\Users\moc\Desktop\ASP 2\TurnItGreener-Front-End-ASP2\BatteryCollectionViews\Views\Profile\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "183f07f353960e2b5303d5ed76fc4d5901e6967e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Profile_Index), @"mvc.1.0.view", @"/Views/Profile/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Profile/Index.cshtml", typeof(AspNetCore.Views_Profile_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\moc\Desktop\ASP 2\TurnItGreener-Front-End-ASP2\BatteryCollectionViews\Views\_ViewImports.cshtml"
using BatteryCollectionViews;

#line default
#line hidden
#line 2 "C:\Users\moc\Desktop\ASP 2\TurnItGreener-Front-End-ASP2\BatteryCollectionViews\Views\_ViewImports.cshtml"
using BatteryCollectionViews.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"183f07f353960e2b5303d5ed76fc4d5901e6967e", @"/Views/Profile/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"36d54da6e7bf3fdb08bb60db08b2e15a44921879", @"/Views/_ViewImports.cshtml")]
    public class Views_Profile_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\moc\Desktop\ASP 2\TurnItGreener-Front-End-ASP2\BatteryCollectionViews\Views\Profile\Index.cshtml"
 using (Html.BeginForm())
{

#line default
#line hidden
            BeginContext(32, 214, true);
            WriteLiteral("    <!-- Breadcrumbs-->\r\n    <ol class=\"breadcrumb\">\r\n        <li class=\"breadcrumb-item\">\r\n            <a href=\"#\">Início</a>\r\n        </li>\r\n        <li class=\"breadcrumb-item active\">Meu Perfil</li>\r\n    </ol>\r\n");
            EndContext();
            BeginContext(248, 323, true);
            WriteLiteral(@"    <!-- Area Chart Example-->
    <div class=""card mb-3"">
        <div class=""card-header"">
            <i class=""fas fa-chart-area""></i>
            Pontuação Semanal
        </div>
        <div class=""card-body"">
            <canvas id=""myAreaChart"" width=""100"" height=""30""></canvas>
        </div>
    </div>
");
            EndContext();
            BeginContext(573, 858, true);
            WriteLiteral(@"    <div class=""row"">
        <div class=""col-lg-8"">
            <div class=""card mb-3"">
                <div class=""card-header"">
                    <i class=""fas fa-chart-bar""></i>
                    Pontuação Mensal
                </div>
                <div class=""card-body"">
                    <canvas id=""myBarChart"" width=""100"" height=""50""></canvas>
                </div>
            </div>
        </div>
        <div class=""col-lg-4"">
            <div class=""card mb-3"">
                <div class=""card-header"">
                    <i class=""fas fa-chart-pie""></i>
                    Itens Mais Descartados
                </div>
                <div class=""card-body"">
                    <canvas id=""myPieChart"" width=""100"" height=""100""></canvas>
                </div>
            </div>
        </div>
    </div>
");
            EndContext();
            BeginContext(1433, 1252, true);
            WriteLiteral(@"    <div class=""card mb-3"">
        <div class=""card-header"">
            <i class=""fas fa-fw fa-chart-bar""></i>
            Características Gerais
        </div>
        <div class=""card-body"">
            <div class=""table-responsive"">
                <table class=""table table-bordered"" id=""dataTable1"" width=""100%"" cellspacing=""0"">
                    <tbody>
                        <tr class=""classtr"">
                            <td>Lugar mais visitado</td>
                            <td id=""mostVisited""></td>
                        </tr>
                        <tr class=""classtr"">
                            <td>Objeto mais descartado</td>
                            <td id=""mostDiscarted""></td>
                        </tr>
                        <tr class=""classtr"">
                            <td>Pontuação total</td>
                            <td id=""totalPoints""></td>
                        </tr>
                        <tr class=""classtr"">
                            <td");
            WriteLiteral(">Mês com mais descartes</td>\r\n                            <td id=\"mostDiscartedMonth\"></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n");
            EndContext();
#line 78 "C:\Users\moc\Desktop\ASP 2\TurnItGreener-Front-End-ASP2\BatteryCollectionViews\Views\Profile\Index.cshtml"
}

#line default
#line hidden
            BeginContext(2688, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(2708, 101, true);
                WriteLiteral("\r\n    <script src=\"vendor/chart.js/Chart.min.js\"></script>\r\n\r\n    <script type=\"text/javascript\">\r\n\r\n");
                EndContext();
                BeginContext(3562, 2249, true);
                WriteLiteral(@"
        var simpleData = {
            ""alldiscards"": {
                ""weekPoints"": [
                    4,
                    0,
                    0,
                    7
                ]
            }
        }

        // Set new default font family and font color to mimic Bootstrap's default styling
        Chart.defaults.global.defaultFontFamily = '-apple-system,system-ui,BlinkMacSystemFont,""Segoe UI"",Roboto,""Helvetica Neue"",Arial,sans-serif';
        Chart.defaults.global.defaultFontColor = '#292b2c';

        // Area Chart Example
        var ctx = document.getElementById(""myAreaChart"");
        var myLineChart = new Chart(ctx, {
            type: 'line',
            data: {
            labels: [""Semana 1"", ""Semana 2"", ""Semana 3"", ""Semana 4""],
            datasets: [{
                label: ""Sessions"",
                lineTension: 0.3,
                backgroundColor: ""rgba(2,117,216,0.2)"",
                borderColor: ""rgba(2,117,216,1)"",
                pointRadius");
                WriteLiteral(@": 5,
                pointBackgroundColor: ""rgba(2,117,216,1)"",
                pointBorderColor: ""rgba(255,255,255,0.8)"",
                pointHoverRadius: 5,
                pointHoverBackgroundColor: ""rgba(2,117,216,1)"",
                pointHitRadius: 50,
                pointBorderWidth: 2,
                data: simpleData.alldiscards.weekPoints,
            }],
            },
            options: {
            scales: {
                xAxes: [{
                time: {
                    unit: 'date'
                },
                gridLines: {
                    display: false
                },
                ticks: {
                    maxTicksLimit: 7
                }
                }],
                yAxes: [{
                ticks: {
                    min: 0,
                    max: 7,
                    maxTicksLimit: 5
                },
                gridLines: {
                    color: ""rgba(0, 0, 0, .125)"",
                }
                }");
                WriteLiteral("],\r\n            },\r\n            legend: {\r\n                display: false\r\n            }\r\n            }\r\n        });\r\n\r\n        //---------------------------------------------------------------- //\r\n\r\n");
                EndContext();
                BeginContext(6567, 2195, true);
                WriteLiteral(@"
        var simpleData1 = {
                ""alldiscards"": {
                    ""yearPoints"": [
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        2,
                        9,
                        0,
                        0
                    ]
                }
            }

        // Set new default font family and font color to mimic Bootstrap's default styling
        Chart.defaults.global.defaultFontFamily = '-apple-system,system-ui,BlinkMacSystemFont,""Segoe UI"",Roboto,""Helvetica Neue"",Arial,sans-serif';
        Chart.defaults.global.defaultFontColor = '#292b2c';

        // Bar Chart Example
        var ctx = document.getElementById(""myBarChart"");
        var myLineChart = new Chart(ctx, {
            type: 'bar',
            data: {
            labels: [""Janeiro"", ""Fevereiro"", ");
                WriteLiteral(@"""Março"", ""Abril"", ""Maio"", ""Junho"", ""Julho"", ""Agosto"", ""Setembro"", ""Outubro"", ""Novembro"", ""Dezembro""],
            datasets: [{
                label: ""Pontos"",
                backgroundColor: ""rgba(2,117,216,1)"",
                borderColor: ""rgba(2,117,216,1)"",
                data: simpleData1.alldiscards.yearPoints,
            }],
            },
            options: {
            scales: {
                xAxes: [{
                time: {
                    unit: 'month'
                },
                gridLines: {
                    display: false
                },
                ticks: {
                    maxTicksLimit: 6
                }
                }],
                yAxes: [{
                ticks: {
                    min: 0,
                    max: 30,
                    maxTicksLimit: 5
                },
                gridLines: {
                    display: true
                }
                }],
            },
            legend: {
     ");
                WriteLiteral("           display: false\r\n            }\r\n            }\r\n        });\r\n\r\n        // --------------------------------------------------------- //\r\n\r\n");
                EndContext();
                BeginContext(9384, 1292, true);
                WriteLiteral(@"
        var simpleData2 = {
            ""materialsDiscarded"": [
                {
                    ""key"": ""Bateria"",
                    ""value"": 5
                },
                {
                    ""key"": ""Óleo"",
                    ""value"": 3
                },
                {
                    ""key"": ""Pilha"",
                    ""value"": 3
                }
            ]
        }

        // Set new default font family and font color to mimic Bootstrap's default styling
        Chart.defaults.global.defaultFontFamily = '-apple-system,system-ui,BlinkMacSystemFont,""Segoe UI"",Roboto,""Helvetica Neue"",Arial,sans-serif';
        Chart.defaults.global.defaultFontColor = '#292b2c';

        // Pie Chart Example
        var ctx = document.getElementById(""myPieChart"");
        var myPieChart = new Chart(ctx, {
            type: 'pie',
            data: {
            labels: [""Bateria"", ""Pilha"", ""Óleo""],
                datasets: [{
                    data: simpleData2.mat");
                WriteLiteral(@"erialsDiscarded,
                backgroundColor: ['#007bff', '#dc3545', '#ffc107'],
            }],
            },
        });

        function GetJson() {
            var resp1 = [];
            $.ajax({
                type: ""GET"",
                url: '");
                EndContext();
                BeginContext(10677, 50, false);
#line 325 "C:\Users\moc\Desktop\ASP 2\TurnItGreener-Front-End-ASP2\BatteryCollectionViews\Views\Profile\Index.cshtml"
                 Write(Url.Action("OnGetRankingMostDiscarded", "Profile"));

#line default
#line hidden
                EndContext();
                BeginContext(10727, 1081, true);
                WriteLiteral(@"',
                async: false,
                contentType: ""application/json"",
                success: function (data) {
                    resp1.push(data);
                },
                error: function (req, status, error) {
                    alert(""error"");
                }
            });

            return resp1;
        }

        var simpleData3 = {
            ""generalData"": {
                ""mostVisited"": ""Furb Campus 2"",
                ""mostDiscarded"": ""Bateria"",
                ""totalPoints"": 19,
                ""mostDiscardedMonth"": 10
            },
        }

        $(document).ready(function () {

            document.getElementById(""mostVisited"").innerText = simpleData3()[0].mostVisited;
            document.getElementById(""mostDiscarted"").innerText = simpleData3()[0].mostDiscarded;
            document.getElementById(""totalPoints"").innerText = simpleData3()[0].totalPoints;
            document.getElementById(""mostDiscartedMonth"").innerText = simpleData3()");
                WriteLiteral("[0].mostDiscartedMonth;\r\n\r\n        });\r\n\r\n    </script>\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
